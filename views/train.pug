include ./head.pug
nav.navbar.navbar-inverse.navbar-fixed-top
    .container
        .navbar-header
            button.navbar-toggle.collapsed(type='button', data-toggle='collapse', data-target='#navbar', aria-expanded='false', aria-controls='navbar')
                span.sr-only Toggle navigation
                span.icon-bar
                span.icon-bar
                span.icon-bar
            a.navbar-brand(href='/') CRM and Information Mining II Project
        #navbar.collapse.navbar-collapse
            ul.nav.navbar-nav
.container(style='margin-top: 100px;')
    div.row
        div.col-md-7(style='position: relative')
            canvas#CamImage(width='600px',height='338px')
            div#CamImageOverlay
                div#co00.co
                div#co01.co
                div#co02.co
                div#co03.co
                div#co10.co
                div#co11.co
                div#co12.co
                div#co13.co
                div#co20.co
                div#co21.co
                div#co22.co
                div#co23.co
                div#co30.co
                div#co31.co
                div#co32.co
                div#co33.co
            script.
                loadImage("images/image.jpg");
        div.col-md-5
            div.row
                div.panel-default.panel
                    div.panel-heading
                        strong Train the network
                    div.panel-body
                        p Click the button that correlates the most to the weather on the image.
                        p The networks trains itself automatically as long as you have made two or more choices jet. It does not include your current choice to its own choice, but will use it for its following choices.
                        p Hover the image with the mouse to show rgb values that are used as input values for the network.
                        p
                        div.row
                            div.col-md-12
                                form(name="train", action="/", method="post")
                                    input#imageData(type="hidden", name="imageData")
                                    div.col-md-4
                                        button.btn.btn-primary(type="submit", name="sight" value="sunny") sunny
                                    div.col-md-4
                                        button.btn.btn-primary(type="submit", name="sight" value="cloudy") cloudy
                                    div.col-md-4
                                        button.btn.btn-primary(type="submit", name="sight" value="foggy") foggy
    p
    p
    div.row
        div.panel.panel-default
            div.panel-heading
                strong Last image
            div.panel-body
                    div.col-md-4
                        img(src="images/lastimage.jpg", width="300px",height="189px")
                    div.col-md-8
                        div.row
                            div.col-md-6
                                p
                                    strong Neuronal network would say:
                                each val, index in output
                                    p= val
                            div.col-md-6
                                p
                                    strong You said:
                                p #{yousaid}
                        div.row
                            div.col-md-12
                                if history.length > 0
                                    p
                                        strong history:
                                        span successrate: #{rate}%
                                    each val in history
                                        if val == 1
                                            span.glyphicon.glyphicon-ok.icon-success
                                        else
                                            span.glyphicon.glyphicon-remove.icon-danger
            div.panel-footer Training results: Iterations: #{training.iterations} | Error: #{training.error}
                if training.iterations == 10000
                    span.label.label-danger Training failed
                else if training.iterations > 0
                    span.label.label-success Training successfull
include ./foot.pug